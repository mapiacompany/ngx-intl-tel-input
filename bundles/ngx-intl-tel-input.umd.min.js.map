{"version":3,"sources":["ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.service.ts","ng://ngx-intl-tel-input/lib/enums/country-iso.enum.ts","ng://ngx-intl-tel-input/lib/data/country-code.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.validator.ts","ng://ngx-intl-tel-input/lib/enums/search-country-field.enum.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.component.ts","ng://ngx-intl-tel-input/lib/ngx-intl-tel-input.module.ts","ng://ngx-intl-tel-input/lib/enums/tooltip-label.enum.ts"],"names":["NgxIntlTelInputService","Injectable","args","providedIn","Afghanistan","Albania","Algeria","AmericanSamoa","Andorra","Angola","Anguilla","AntiguaAndBarbuda","Argentina","Armenia","Aruba","Australia","Austria","Azerbaijan","Bahamas","Bahrain","Bangladesh","Barbados","Belarus","Belgium","Belize","Benin","Bermuda","Bhutan","Bolivia","BosniaAndHerzegovina","Botswana","Brazil","BritishIndianOceanTerritory","BritishVirginIslands","Brunei","Bulgaria","BurkinaFaso","Burundi","Cambodia","Cameroon","Canada","CapeVerde","CaribbeanNetherlands","CaymanIslands","CentralAfricanRepublic","Chad","Chile","China","ChristmasIsland","Cocos","Colombia","Comoros","CongoDRCJamhuriYaKidemokrasiaYaKongo","CongoRepublicCongoBrazzaville","CookIslands","CostaRica","CôteDIvoire","Croatia","Cuba","Curaçao","Cyprus","CzechRepublic","Denmark","Djibouti","Dominica","DominicanRepublic","Ecuador","Egypt","ElSalvador","EquatorialGuinea","Eritrea","Estonia","Ethiopia","FalklandIslands","FaroeIslands","Fiji","Finland","France","FrenchGuiana","FrenchPolynesia","Gabon","Gambia","Georgia","Germany","Ghana","Gibraltar","Greece","Greenland","Grenada","Guadeloupe","Guam","Guatemala","Guernsey","Guinea","GuineaBissau","Guyana","Haiti","Honduras","HongKong","Hungary","Iceland","India","Indonesia","Iran","Iraq","Ireland","IsleOfMan","Israel","Italy","Jamaica","Japan","Jersey","Jordan","Kazakhstan","Kenya","Kiribati","Kosovo","Kuwait","Kyrgyzstan","Laos","Latvia","Lebanon","Lesotho","Liberia","Libya","Liechtenstein","Lithuania","Luxembourg","Macau","Macedonia","Madagascar","Malawi","Malaysia","Maldives","Mali","Malta","MarshallIslands","Martinique","Mauritania","Mauritius","Mayotte","Mexico","Micronesia","Moldova","Monaco","Mongolia","Montenegro","Montserrat","Morocco","Mozambique","Myanmar","Namibia","Nauru","Nepal","Netherlands","NewCaledonia","NewZealand","Nicaragua","Niger","Nigeria","Niue","NorfolkIsland","NorthKorea","NorthernMarianaIslands","Norway","Oman","Pakistan","Palau","Palestine","Panama","PapuaNewGuinea","Paraguay","Peru","Philippines","Poland","Portugal","PuertoRico","Qatar","Réunion","Romania","Russia","Rwanda","SaintBarthélemy","SaintHelena","SaintKittsAndNevis","SaintLucia","SaintMartin","SaintPierreAndMiquelon","SaintVincentAndTheGrenadines","Samoa","SanMarino","SãoToméAndPríncipe","SaudiArabia","Senegal","Serbia","Seychelles","SierraLeone","Singapore","SintMaarten","Slovakia","Slovenia","SolomonIslands","Somalia","SouthAfrica","SouthKorea","SouthSudan","Spain","SriLanka","Sudan","Suriname","SvalbardAndJanMayen","Swaziland","Sweden","Switzerland","Syria","Taiwan","Tajikistan","Tanzania","Thailand","TimorLeste","Togo","Tokelau","Tonga","TrinidadAndTobago","Tunisia","Turkey","Turkmenistan","TurksAndCaicosIslands","Tuvalu","USVirginIslands","Uganda","Ukraine","UnitedArabEmirates","UnitedKingdom","UnitedStates","Uruguay","Uzbekistan","Vanuatu","VaticanCity","Venezuela","Vietnam","WallisAndFutuna","WesternSahara","Yemen","Zambia","Zimbabwe","ÅlandIslands","CountryCode","this","allCountries","CountryISO","phoneNumberValidator","control","isCheckValidation","document","getElementById","getAttribute","isRequired","errors","required","error","validatePhoneNumber","valid","number","lpn.PhoneNumberUtil","getInstance","parse","value","countryCode","e","isValidNumberForRegion","clearValidators","DialCode","Iso2","Name","All","ɵ0","NgxIntlTelInputComponent","countryCodeData","preferredCountries","enablePlaceholder","cssClass","onlyCountries","enableAutoCountrySelect","searchCountryFlag","searchCountryField","SearchCountryField","searchCountryPlaceholder","maxLength","selectFirstCountry","phoneValidation","countryChange","EventEmitter","selectedCountry","areaCodes","undefined","dialCode","flagClass","iso2","name","placeHolder","priority","separateDialCode","phoneNumber","preferredCountriesInDropDown","phoneUtil","disabled","countrySearchText","onTouched","propagateChange","_","prototype","ngOnInit","_this","fetchCountryData","length","getPreferredCountries","filter","c","includes","setSelectedCountry","getSelectedCountry","checkSeparateDialCodeStyle","ngOnChanges","changes","currentValue","previousValue","forEach","preferredCountry","push","selectedCountryISO","find","toLowerCase","onPhoneNumberChange","country","emit","searchCountry","countrySearchTextLower","indexOf","startsWith","el","countryList","nativeElement","querySelector","scrollIntoView","behavior","toUpperCase","getCountryCode","getCountryIsoCode","newCountry","intlNo","format","lpn.PhoneNumberFormat","INTERNATIONAL","removeDialCode","internationalNumber","nationalNumber","NATIONAL","onCountrySelect","focus","onInputKeyPress","event","test","key","ctrlKey","preventDefault","toString","toLocaleLowerCase","getPhoneNumberPlaceHolder","getExampleNumber","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","writeValue","obj","setTimeout","rawNumber","countries","mainCountry","secondaryCountries","matchedCountry","areaCode","separateDialCodePlaceHolder","placeholder","substr","cntryCd","separateDialCodeClass","Component","selector","template","providers","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","multi","NG_VALIDATORS","useValue","Input","Output","ViewChild","static","NgxIntlTelInputModule","forRoot","ngModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","BsDropdownModule","TooltipModule","exports"],"mappings":"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AAQ,KACRC,SAAW,KACXC,oBAAsB,KACtBC,UAAY,KACZC,OAAS,KACTC,YAAc,KACdC,MAAQ,KACRC,OAAS,KACTC,WAAa,KACbC,SAAW,KACXC,SAAW,KACXC,WAAa,KACbC,KAAO,KACPC,QAAU,KACVC,MAAQ,KACRC,kBAAoB,KACpBC,QAAU,KACVC,OAAS,KACTC,aAAe,KACfC,sBAAwB,KACxBC,OAAS,KACTC,gBAAkB,KAClBC,OAAS,KACTC,QAAU,KACVC,mBAAqB,KACrBC,cAAgB,KAChBC,aAAe,KACfC,QAAU,KACVC,WAAa,KACbC,QAAU,KACVC,YAAc,KACdC,UAAY,KACZC,QAAU,KACVC,gBAAkB,KAClBC,cAAgB,KAChBC,MAAQ,KACRC,OAAS,KACTC,SAAW,KACXC,eAAe,MCnPhBC,EAEA,WACQC,KAAAC,aAAe,CACrB,CACC,6BACAC,EAAWtP,YACX,MAED,CACC,qBACAsP,EAAWrP,QACX,OAED,CACC,uBACAqP,EAAWpP,QACX,OAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,UACAoP,EAAWlP,QACX,OAED,CACC,SACAkP,EAAWjP,OACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAiP,EAAW9O,UACX,MAED,CACC,qBACA8O,EAAW7O,QACX,OAED,CACC,QACA6O,EAAW5O,MACX,OAED,CACC,YACA4O,EAAW3O,UACX,KACA,GAED,CACC,uBACA2O,EAAW1O,QACX,MAED,CACC,0BACA0O,EAAWzO,WACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAyO,EAAWvO,QACX,OAED,CACC,wBACAuO,EAAWtO,WACX,OAED,CACC,WACA,KACA,IACA,EACA,CACC,QAGF,CACC,qBACAsO,EAAWpO,QACX,OAED,CACC,mBACAoO,EAAWnO,QACX,MAED,CACC,SACAmO,EAAWlO,OACX,OAED,CACC,gBACAkO,EAAWjO,MACX,OAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,iBACAiO,EAAW/N,OACX,OAED,CACC,UACA+N,EAAW9N,QACX,OAED,CACC,+CACA8N,EAAW7N,qBACX,OAED,CACC,WACA6N,EAAW5N,SACX,OAED,CACC,kBACA4N,EAAW3N,OACX,MAED,CACC,iCACA2N,EAAW1N,4BACX,OAED,CACC,yBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACA0N,EAAWxN,OACX,OAED,CACC,sBACAwN,EAAWvN,SACX,OAED,CACC,eACAuN,EAAWtN,YACX,OAED,CACC,qBACAsN,EAAWrN,QACX,OAED,CACC,qBACAqN,EAAWpN,SACX,OAED,CACC,sBACAoN,EAAWnN,SACX,OAED,CACC,SACAmN,EAAWlN,OACX,IACA,EACA,CACC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAC7E,MAAO,MAAO,MAAO,MAAO,MAAO,QAGrC,CACC,0BACAkN,EAAWjN,UACX,OAED,CACC,wBACAiN,EAAWhN,qBACX,MACA,GAED,CACC,iBACA,KACA,IACA,EACA,CACC,QAGF,CACC,uDACAgN,EAAW9M,uBACX,OAED,CACC,eACA8M,EAAW7M,KACX,OAED,CACC,QACA6M,EAAW5M,MACX,MAED,CACC,aACA4M,EAAW3M,MACX,MAED,CACC,mBACA2M,EAAW1M,gBACX,KACA,GAED,CACC,0BACA0M,EAAWzM,MACX,KACA,GAED,CACC,WACAyM,EAAWxM,SACX,MAED,CACC,yBACAwM,EAAWvM,QACX,OAED,CACC,iDACAuM,EAAWtM,qCACX,OAED,CACC,uCACAsM,EAAWrM,8BACX,OAED,CACC,eACAqM,EAAWpM,YACX,OAED,CACC,aACAoM,EAAWnM,UACX,OAED,CACC,gBACAmM,EAAWlM,YACX,OAED,CACC,qBACAkM,EAAWjM,QACX,OAED,CACC,OACAiM,EAAWhM,KACX,MAED,CACC,UACAgM,EAAW/L,QACX,MACA,GAED,CACC,kBACA+L,EAAW9L,OACX,OAED,CACC,mCACA8L,EAAW7L,cACX,OAED,CACC,oBACA6L,EAAW5L,QACX,MAED,CACC,WACA4L,EAAW3L,SACX,OAED,CACC,WACA2L,EAAW1L,SACX,QAED,CACC,4CACA0L,EAAWzL,kBACX,IACA,EACA,CAAC,MAAO,MAAO,QAEhB,CACC,UACAyL,EAAWxL,QACX,OAED,CACC,iBACAwL,EAAWvL,MACX,MAED,CACC,cACAuL,EAAWtL,WACX,OAED,CACC,wCACAsL,EAAWrL,iBACX,OAED,CACC,UACAqL,EAAWpL,QACX,OAED,CACC,kBACAoL,EAAWnL,QACX,OAED,CACC,WACAmL,EAAWlL,SACX,OAED,CACC,oCACAkL,EAAWjL,gBACX,OAED,CACC,0BACAiL,EAAWhL,aACX,OAED,CACC,OACAgL,EAAW/K,KACX,OAED,CACC,kBACA+K,EAAW9K,QACX,MACA,GAED,CACC,SACA8K,EAAW7K,OACX,MAED,CACC,mCACA6K,EAAW5K,aACX,OAED,CACC,yCACA4K,EAAW3K,gBACX,OAED,CACC,QACA2K,EAAW1K,MACX,OAED,CACC,SACA0K,EAAWzK,OACX,OAED,CACC,uBACAyK,EAAWxK,QACX,OAED,CACC,wBACAwK,EAAWvK,QACX,MAED,CACC,gBACAuK,EAAWtK,MACX,OAED,CACC,YACAsK,EAAWrK,UACX,OAED,CACC,kBACAqK,EAAWpK,OACX,MAED,CACC,+BACAoK,EAAWnK,UACX,OAED,CACC,UACAmK,EAAWlK,QACX,QAED,CACC,aACAkK,EAAWjK,WACX,MACA,GAED,CACC,OACA,KACA,IACA,EACA,CACC,QAGF,CACC,YACAiK,EAAW/J,UACX,OAED,CACC,WACA+J,EAAW9J,SACX,KACA,EACA,CAAC,OAEF,CACC,kBACA8J,EAAW7J,OACX,OAED,CACC,+BACA6J,EAAW5J,aACX,OAED,CACC,SACA4J,EAAW3J,OACX,OAED,CACC,QACA2J,EAAW1J,MACX,OAED,CACC,WACA0J,EAAWzJ,SACX,OAED,CACC,iBACAyJ,EAAWxJ,SACX,OAED,CACC,yBACAwJ,EAAWvJ,QACX,MAED,CACC,mBACAuJ,EAAWtJ,QACX,OAED,CACC,eACAsJ,EAAWrJ,MACX,MAED,CACC,YACAqJ,EAAWpJ,UACX,MAED,CACC,kBACAoJ,EAAWnJ,KACX,MAED,CACC,mBACAmJ,EAAWlJ,KACX,OAED,CACC,UACAkJ,EAAWjJ,QACX,OAED,CACC,cACAiJ,EAAWhJ,UACX,KACA,EACA,CAAC,OAEF,CACC,oBACAgJ,EAAW/I,OACX,OAED,CACC,iBACA+I,EAAW9I,MACX,KACA,GAED,CACC,UACA,KACA,IACA,EACA,CACC,QAGF,CACC,aACA8I,EAAW5I,MACX,MAED,CACC,SACA4I,EAAW3I,OACX,KACA,EACA,CAAC,OAEF,CACC,qBACA2I,EAAW1I,OACX,OAED,CACC,yBACA0I,EAAWzI,WACX,IACA,GAED,CACC,QACAyI,EAAWxI,MACX,OAED,CACC,WACAwI,EAAWvI,SACX,OAED,CACC,SACAuI,EAAWtI,OACX,OAED,CACC,qBACAsI,EAAWrI,OACX,OAED,CACC,0BACAqI,EAAWpI,WACX,OAED,CACC,aACAoI,EAAWnI,KACX,OAED,CACC,mBACAmI,EAAWlI,OACX,OAED,CACC,qBACAkI,EAAWjI,QACX,OAED,CACC,UACAiI,EAAWhI,QACX,OAED,CACC,UACAgI,EAAW/H,QACX,OAED,CACC,mBACA+H,EAAW9H,MACX,OAED,CACC,gBACA8H,EAAW7H,cACX,OAED,CACC,sBACA6H,EAAW5H,UACX,OAED,CACC,aACA4H,EAAW3H,WACX,OAED,CACC,aACA2H,EAAW1H,MACX,OAED,CACC,iCACA0H,EAAWzH,UACX,OAED,CACC,4BACAyH,EAAWxH,WACX,OAED,CACC,SACAwH,EAAWvH,OACX,OAED,CACC,WACAuH,EAAWtH,SACX,MAED,CACC,WACAsH,EAAWrH,SACX,OAED,CACC,OACAqH,EAAWpH,KACX,OAED,CACC,QACAoH,EAAWnH,MACX,OAED,CACC,mBACAmH,EAAWlH,gBACX,OAED,CACC,aACAkH,EAAWjH,WACX,OAED,CACC,4BACAiH,EAAWhH,WACX,OAED,CACC,oBACAgH,EAAW/G,UACX,OAED,CACC,UACA+G,EAAW9G,QACX,MACA,GAED,CACC,kBACA8G,EAAW7G,OACX,MAED,CACC,aACA6G,EAAW5G,WACX,OAED,CACC,8BACA4G,EAAW3G,QACX,OAED,CACC,SACA2G,EAAW1G,OACX,OAED,CACC,oBACA0G,EAAWzG,SACX,OAED,CACC,yBACAyG,EAAWxG,WACX,OAED,CACC,aACA,KACA,IACA,EACA,CACC,QAGF,CACC,sBACAwG,EAAWtG,QACX,MACA,GAED,CACC,0BACAsG,EAAWrG,WACX,OAED,CACC,2BACAqG,EAAWpG,QACX,MAED,CACC,oBACAoG,EAAWnG,QACX,OAED,CACC,QACAmG,EAAWlG,MACX,OAED,CACC,gBACAkG,EAAWjG,MACX,OAED,CACC,0BACAiG,EAAWhG,YACX,MAED,CACC,qCACAgG,EAAW/F,aACX,OAED,CACC,cACA+F,EAAW9F,WACX,MAED,CACC,YACA8F,EAAW7F,UACX,OAED,CACC,gBACA6F,EAAW5F,MACX,OAED,CACC,UACA4F,EAAW3F,QACX,OAED,CACC,OACA2F,EAAW1F,KACX,OAED,CACC,iBACA0F,EAAWzF,cACX,OAED,CACC,+BACAyF,EAAWxF,WACX,OAED,CACC,2BACAwF,EAAWvF,uBACX,QAED,CACC,iBACAuF,EAAWtF,OACX,KACA,GAED,CACC,kBACAsF,EAAWrF,KACX,OAED,CACC,wBACAqF,EAAWpF,SACX,MAED,CACC,QACAoF,EAAWnF,MACX,OAED,CACC,wBACAmF,EAAWlF,UACX,OAED,CACC,kBACAkF,EAAWjF,OACX,OAED,CACC,mBACAiF,EAAWhF,eACX,OAED,CACC,WACAgF,EAAW/E,SACX,OAED,CACC,cACA+E,EAAW9E,KACX,MAED,CACC,cACA8E,EAAW7E,YACX,MAED,CACC,kBACA6E,EAAW5E,OACX,MAED,CACC,WACA4E,EAAW3E,SACX,OAED,CACC,cACA2E,EAAW1E,WACX,IACA,EACA,CAAC,MAAO,QAET,CACC,iBACA0E,EAAWzE,MACX,OAED,CACC,uBACAyE,EAAWxE,QACX,MACA,GAED,CACC,oBACAwE,EAAWvE,QACX,MAED,CACC,kBACAuE,EAAWtE,OACX,IACA,GAED,CACC,SACAsE,EAAWrE,OACX,OAED,CACC,sCACAqE,EAAWpE,gBACX,MACA,GAED,CACC,eACAoE,EAAWnE,YACX,OAED,CACC,wBACAmE,EAAWlE,mBACX,QAED,CACC,cACA,KACA,IACA,EACA,CACC,QAGF,CACC,iDACAkE,EAAWhE,YACX,MACA,GAED,CACC,uDACAgE,EAAW/D,uBACX,OAED,CACC,mCACA,KACA,IACA,EACA,CACC,QAGF,CACC,QACA+D,EAAW7D,MACX,OAED,CACC,aACA6D,EAAW5D,UACX,OAED,CACC,8CACA4D,EAAW3D,mBACX,OAED,CACC,6CACA2D,EAAW1D,YACX,OAED,CACC,oBACA0D,EAAWzD,QACX,OAED,CACC,kBACAyD,EAAWxD,OACX,OAED,CACC,aACAwD,EAAWvD,WACX,OAED,CACC,eACAuD,EAAWtD,YACX,OAED,CACC,YACAsD,EAAWrD,UACX,MAED,CACC,eACA,KACA,IACA,EACA,CACC,QAGF,CACC,uBACAqD,EAAWnD,SACX,OAED,CACC,uBACAmD,EAAWlD,SACX,OAED,CACC,kBACAkD,EAAWjD,eACX,OAED,CACC,uBACAiD,EAAWhD,QACX,OAED,CACC,eACAgD,EAAW/C,YACX,MAED,CACC,qBACA+C,EAAW9C,WACX,MAED,CACC,gCACA8C,EAAW7C,WACX,OAED,CACC,iBACA6C,EAAW5C,MACX,MAED,CACC,0BACA4C,EAAW3C,SACX,MAED,CACC,qBACA2C,EAAW1C,MACX,OAED,CACC,WACA0C,EAAWzC,SACX,OAED,CACC,yBACAyC,EAAWxC,oBACX,KACA,GAED,CACC,YACAwC,EAAWvC,UACX,OAED,CACC,mBACAuC,EAAWtC,OACX,MAED,CACC,wBACAsC,EAAWrC,YACX,MAED,CACC,mBACAqC,EAAWpC,MACX,OAED,CACC,cACAoC,EAAWnC,OACX,OAED,CACC,aACAmC,EAAWlC,WACX,OAED,CACC,WACAkC,EAAWjC,SACX,OAED,CACC,iBACAiC,EAAWhC,SACX,MAED,CACC,cACAgC,EAAW/B,WACX,OAED,CACC,OACA+B,EAAW9B,KACX,OAED,CACC,UACA8B,EAAW7B,QACX,OAED,CACC,QACA6B,EAAW5B,MACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,oBACA4B,EAAW1B,QACX,OAED,CACC,mBACA0B,EAAWzB,OACX,MAED,CACC,eACAyB,EAAWxB,aACX,OAED,CACC,2BACAwB,EAAWvB,sBACX,QAED,CACC,SACAuB,EAAWtB,OACX,OAED,CACC,sBACA,KACA,IACA,EACA,CACC,QAGF,CACC,SACAsB,EAAWpB,OACX,OAED,CACC,oBACAoB,EAAWnB,QACX,OAED,CACC,qDACAmB,EAAWlB,mBACX,OAED,CACC,iBACAkB,EAAWjB,cACX,KACA,GAED,CACC,gBACAiB,EAAWhB,aACX,IACA,GAED,CACC,UACAgB,EAAWf,QACX,OAED,CACC,2BACAe,EAAWd,WACX,OAED,CACC,UACAc,EAAWb,QACX,OAED,CACC,oCACAa,EAAWZ,YACX,KACA,GAED,CACC,YACAY,EAAWX,UACX,MAED,CACC,qBACAW,EAAWV,QACX,MAED,CACC,oBACAU,EAAWT,gBACX,OAED,CACC,sCACAS,EAAWR,cACX,MACA,GAED,CACC,mBACAQ,EAAWP,MACX,OAED,CACC,SACAO,EAAWN,OACX,OAED,CACC,WACAM,EAAWL,SACX,OAED,CACC,gBACAK,EAAWJ,aACX,MACA,KCryCUK,EAAoB,SAAIC,OAC9BC,EAAoBC,SAASC,eAAe,SAASC,aAAa,cACxE,GAAyB,QAArBH,EAA6B,KAC1BI,EAAaL,EAAQM,SAAsC,IAA5BN,EAAQM,OAAOC,SAC9CC,EAAQ,CAAEC,oBAAqB,CAAEC,OAAO,IAC1CC,OAAM,EAEV,IACCA,EAASC,EAAAA,gBAAoBC,cAAcC,MAAMd,EAAQe,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","sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class NgxIntlTelInputService {\n\n\tconstructor() { }\n}\n","export enum CountryISO {\n\tAfghanistan = 'af',\n\tAlbania = 'al',\n\tAlgeria = 'dz',\n\tAmericanSamoa = 'as',\n\tAndorra = 'ad',\n\tAngola = 'ao',\n\tAnguilla = 'ai',\n\tAntiguaAndBarbuda = 'ag',\n\tArgentina = 'ar',\n\tArmenia = 'am',\n\tAruba = 'aw',\n\tAustralia = 'au',\n\tAustria = 'at',\n\tAzerbaijan = 'az',\n\tBahamas = 'bs',\n\tBahrain = 'bh',\n\tBangladesh = 'bd',\n\tBarbados = 'bb',\n\tBelarus = 'by',\n\tBelgium = 'be',\n\tBelize = 'bz',\n\tBenin = 'bj',\n\tBermuda = 'bm',\n\tBhutan = 'bt',\n\tBolivia = 'bo',\n\tBosniaAndHerzegovina = 'ba',\n\tBotswana = 'bw',\n\tBrazil = 'br',\n\tBritishIndianOceanTerritory = 'io',\n\tBritishVirginIslands = 'vg',\n\tBrunei = 'bn',\n\tBulgaria = 'bg',\n\tBurkinaFaso = 'bf',\n\tBurundi = 'bi',\n\tCambodia = 'kh',\n\tCameroon = 'cm',\n\tCanada = 'ca',\n\tCapeVerde = 'cv',\n\tCaribbeanNetherlands = 'bq',\n\tCaymanIslands = 'ky',\n\tCentralAfricanRepublic = 'cf',\n\tChad = 'td',\n\tChile = 'cl',\n\tChina = 'cn',\n\tChristmasIsland = 'cx',\n\tCocos = 'cc',\n\tColombia = 'co',\n\tComoros = 'km',\n\tCongoDRCJamhuriYaKidemokrasiaYaKongo = 'cd',\n\tCongoRepublicCongoBrazzaville = 'cg',\n\tCookIslands = 'ck',\n\tCostaRica = 'cr',\n\tCÃ´teDIvoire = 'ci',\n\tCroatia = 'hr',\n\tCuba = 'cu',\n\tCuraÃ§ao = 'cw',\n\tCyprus = 'cy',\n\tCzechRepublic = 'cz',\n\tDenmark = 'dk',\n\tDjibouti = 'dj',\n\tDominica = 'dm',\n\tDominicanRepublic = 'do',\n\tEcuador = 'ec',\n\tEgypt = 'eg',\n\tElSalvador = 'sv',\n\tEquatorialGuinea = 'gq',\n\tEritrea = 'er',\n\tEstonia = 'ee',\n\tEthiopia = 'et',\n\tFalklandIslands = 'fk',\n\tFaroeIslands = 'fo',\n\tFiji = 'fj',\n\tFinland = 'fi',\n\tFrance = 'fr',\n\tFrenchGuiana = 'gf',\n\tFrenchPolynesia = 'pf',\n\tGabon = 'ga',\n\tGambia = 'gm',\n\tGeorgia = 'ge',\n\tGermany = 'de',\n\tGhana = 'gh',\n\tGibraltar = 'gi',\n\tGreece = 'gr',\n\tGreenland = 'gl',\n\tGrenada = 'gd',\n\tGuadeloupe = 'gp',\n\tGuam = 'gu',\n\tGuatemala = 'gt',\n\tGuernsey = 'gg',\n\tGuinea = 'gn',\n\tGuineaBissau = 'gw',\n\tGuyana = 'gy',\n\tHaiti = 'ht',\n\tHonduras = 'hn',\n\tHongKong = 'hk',\n\tHungary = 'hu',\n\tIceland = 'is',\n\tIndia = 'in',\n\tIndonesia = 'id',\n\tIran = 'ir',\n\tIraq = 'iq',\n\tIreland = 'ie',\n\tIsleOfMan = 'im',\n\tIsrael = 'il',\n\tItaly = 'it',\n\tJamaica = 'jm',\n\tJapan = 'jp',\n\tJersey = 'je',\n\tJordan = 'jo',\n\tKazakhstan = 'kz',\n\tKenya = 'ke',\n\tKiribati = 'ki',\n\tKosovo = 'xk',\n\tKuwait = 'kw',\n\tKyrgyzstan = 'kg',\n\tLaos = 'la',\n\tLatvia = 'lv',\n\tLebanon = 'lb',\n\tLesotho = 'ls',\n\tLiberia = 'lr',\n\tLibya = 'ly',\n\tLiechtenstein = 'li',\n\tLithuania = 'lt',\n\tLuxembourg = 'lu',\n\tMacau = 'mo',\n\tMacedonia = 'mk',\n\tMadagascar = 'mg',\n\tMalawi = 'mw',\n\tMalaysia = 'my',\n\tMaldives = 'mv',\n\tMali = 'ml',\n\tMalta = 'mt',\n\tMarshallIslands = 'mh',\n\tMartinique = 'mq',\n\tMauritania = 'mr',\n\tMauritius = 'mu',\n\tMayotte = 'yt',\n\tMexico = 'mx',\n\tMicronesia = 'fm',\n\tMoldova = 'md',\n\tMonaco = 'mc',\n\tMongolia = 'mn',\n\tMontenegro = 'me',\n\tMontserrat = 'ms',\n\tMorocco = 'ma',\n\tMozambique = 'mz',\n\tMyanmar = 'mm',\n\tNamibia = 'na',\n\tNauru = 'nr',\n\tNepal = 'np',\n\tNetherlands = 'nl',\n\tNewCaledonia = 'nc',\n\tNewZealand = 'nz',\n\tNicaragua = 'ni',\n\tNiger = 'ne',\n\tNigeria = 'ng',\n\tNiue = 'nu',\n\tNorfolkIsland = 'nf',\n\tNorthKorea = 'kp',\n\tNorthernMarianaIslands = 'mp',\n\tNorway = 'no',\n\tOman = 'om',\n\tPakistan = 'pk',\n\tPalau = 'pw',\n\tPalestine = 'ps',\n\tPanama = 'pa',\n\tPapuaNewGuinea = 'pg',\n\tParaguay = 'py',\n\tPeru = 'pe',\n\tPhilippines = 'ph',\n\tPoland = 'pl',\n\tPortugal = 'pt',\n\tPuertoRico = 'pr',\n\tQatar = 'qa',\n\tRÃ©union = 're',\n\tRomania = 'ro',\n\tRussia = 'ru',\n\tRwanda = 'rw',\n\tSaintBarthÃ©lemy = 'bl',\n\tSaintHelena = 'sh',\n\tSaintKittsAndNevis = 'kn',\n\tSaintLucia = 'lc',\n\tSaintMartin = 'mf',\n\tSaintPierreAndMiquelon = 'pm',\n\tSaintVincentAndTheGrenadines = 'vc',\n\tSamoa = 'ws',\n\tSanMarino = 'sm',\n\tSÃ£oTomÃ©AndPrÃ­ncipe = 'st',\n\tSaudiArabia = 'sa',\n\tSenegal = 'sn',\n\tSerbia = 'rs',\n\tSeychelles = 'sc',\n\tSierraLeone = 'sl',\n\tSingapore = 'sg',\n\tSintMaarten = 'sx',\n\tSlovakia = 'sk',\n\tSlovenia = 'si',\n\tSolomonIslands = 'sb',\n\tSomalia = 'so',\n\tSouthAfrica = 'za',\n\tSouthKorea = 'kr',\n\tSouthSudan = 'ss',\n\tSpain = 'es',\n\tSriLanka = 'lk',\n\tSudan = 'sd',\n\tSuriname = 'sr',\n\tSvalbardAndJanMayen = 'sj',\n\tSwaziland = 'sz',\n\tSweden = 'se',\n\tSwitzerland = 'ch',\n\tSyria = 'sy',\n\tTaiwan = 'tw',\n\tTajikistan = 'tj',\n\tTanzania = 'tz',\n\tThailand = 'th',\n\tTimorLeste = 'tl',\n\tTogo = 'tg',\n\tTokelau = 'tk',\n\tTonga = 'to',\n\tTrinidadAndTobago = 'tt',\n\tTunisia = 'tn',\n\tTurkey = 'tr',\n\tTurkmenistan = 'tm',\n\tTurksAndCaicosIslands = 'tc',\n\tTuvalu = 'tv',\n\tUSVirginIslands = 'vi',\n\tUganda = 'ug',\n\tUkraine = 'ua',\n\tUnitedArabEmirates = 'ae',\n\tUnitedKingdom = 'gb',\n\tUnitedStates = 'us',\n\tUruguay = 'uy',\n\tUzbekistan = 'uz',\n\tVanuatu = 'vu',\n\tVaticanCity = 'va',\n\tVenezuela = 've',\n\tVietnam = 'vn',\n\tWallisAndFutuna = 'wf',\n\tWesternSahara = 'eh',\n\tYemen = 'ye',\n\tZambia = 'zm',\n\tZimbabwe = 'zw',\n\tÃlandIslands = 'ax',\n}\n","import { CountryISO } from '../enums/country-iso.enum';\n\nexport class CountryCode {\n\tpublic allCountries = [\n\t\t[\n\t\t\t'Afghanistan (â«Ø§ÙØºØ§ÙØ³ØªØ§Ùâ¬â)',\n\t\t\tCountryISO.Afghanistan,\n\t\t\t'93'\n\t\t],\n\t\t[\n\t\t\t'Albania (ShqipÃ«ri)',\n\t\t\tCountryISO.Albania,\n\t\t\t'355'\n\t\t],\n\t\t[\n\t\t\t'Algeria (â«Ø§ÙØ¬Ø²Ø§Ø¦Ø±â¬â)',\n\t\t\tCountryISO.Algeria,\n\t\t\t'213'\n\t\t],\n\t\t[\n\t\t\t'American Samoa',\n\t\t\t'as',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'684',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Andorra',\n\t\t\tCountryISO.Andorra,\n\t\t\t'376'\n\t\t],\n\t\t[\n\t\t\t'Angola',\n\t\t\tCountryISO.Angola,\n\t\t\t'244'\n\t\t],\n\t\t[\n\t\t\t'Anguilla',\n\t\t\t'ai',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'264',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Antigua and Barbuda',\n\t\t\t'ag',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'268',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Argentina',\n\t\t\tCountryISO.Argentina,\n\t\t\t'54'\n\t\t],\n\t\t[\n\t\t\t'Armenia (ÕÕ¡ÕµÕ¡Õ½Õ¿Õ¡Õ¶)',\n\t\t\tCountryISO.Armenia,\n\t\t\t'374'\n\t\t],\n\t\t[\n\t\t\t'Aruba',\n\t\t\tCountryISO.Aruba,\n\t\t\t'297'\n\t\t],\n\t\t[\n\t\t\t'Australia',\n\t\t\tCountryISO.Australia,\n\t\t\t'61',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Austria (Ãsterreich)',\n\t\t\tCountryISO.Austria,\n\t\t\t'43'\n\t\t],\n\t\t[\n\t\t\t'Azerbaijan (AzÉrbaycan)',\n\t\t\tCountryISO.Azerbaijan,\n\t\t\t'994'\n\t\t],\n\t\t[\n\t\t\t'Bahamas',\n\t\t\t'bs',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'242',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bahrain (â«Ø§ÙØ¨Ø­Ø±ÙÙâ¬â)',\n\t\t\tCountryISO.Bahrain,\n\t\t\t'973'\n\t\t],\n\t\t[\n\t\t\t'Bangladesh (à¦¬à¦¾à¦à¦²à¦¾à¦¦à§à¦¶)',\n\t\t\tCountryISO.Bangladesh,\n\t\t\t'880'\n\t\t],\n\t\t[\n\t\t\t'Barbados',\n\t\t\t'bb',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'246',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Belarus (ÐÐµÐ»Ð°ÑÑÑÑ)',\n\t\t\tCountryISO.Belarus,\n\t\t\t'375'\n\t\t],\n\t\t[\n\t\t\t'Belgium (BelgiÃ«)',\n\t\t\tCountryISO.Belgium,\n\t\t\t'32'\n\t\t],\n\t\t[\n\t\t\t'Belize',\n\t\t\tCountryISO.Belize,\n\t\t\t'501'\n\t\t],\n\t\t[\n\t\t\t'Benin (BÃ©nin)',\n\t\t\tCountryISO.Benin,\n\t\t\t'229'\n\t\t],\n\t\t[\n\t\t\t'Bermuda',\n\t\t\t'bm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'441',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Bhutan (à½ à½à¾²à½´à½)',\n\t\t\tCountryISO.Bhutan,\n\t\t\t'975'\n\t\t],\n\t\t[\n\t\t\t'Bolivia',\n\t\t\tCountryISO.Bolivia,\n\t\t\t'591'\n\t\t],\n\t\t[\n\t\t\t'Bosnia and Herzegovina (ÐÐ¾ÑÐ½Ð° Ð¸ Ð¥ÐµÑÑÐµÐ³Ð¾Ð²Ð¸Ð½Ð°)',\n\t\t\tCountryISO.BosniaAndHerzegovina,\n\t\t\t'387'\n\t\t],\n\t\t[\n\t\t\t'Botswana',\n\t\t\tCountryISO.Botswana,\n\t\t\t'267'\n\t\t],\n\t\t[\n\t\t\t'Brazil (Brasil)',\n\t\t\tCountryISO.Brazil,\n\t\t\t'55'\n\t\t],\n\t\t[\n\t\t\t'British Indian Ocean Territory',\n\t\t\tCountryISO.BritishIndianOceanTerritory,\n\t\t\t'246'\n\t\t],\n\t\t[\n\t\t\t'British Virgin Islands',\n\t\t\t'vg',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'284',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Brunei',\n\t\t\tCountryISO.Brunei,\n\t\t\t'673'\n\t\t],\n\t\t[\n\t\t\t'Bulgaria (ÐÑÐ»Ð³Ð°ÑÐ¸Ñ)',\n\t\t\tCountryISO.Bulgaria,\n\t\t\t'359'\n\t\t],\n\t\t[\n\t\t\t'Burkina Faso',\n\t\t\tCountryISO.BurkinaFaso,\n\t\t\t'226'\n\t\t],\n\t\t[\n\t\t\t'Burundi (Uburundi)',\n\t\t\tCountryISO.Burundi,\n\t\t\t'257'\n\t\t],\n\t\t[\n\t\t\t'Cambodia (ááááá»áá¶)',\n\t\t\tCountryISO.Cambodia,\n\t\t\t'855'\n\t\t],\n\t\t[\n\t\t\t'Cameroon (Cameroun)',\n\t\t\tCountryISO.Cameroon,\n\t\t\t'237'\n\t\t],\n\t\t[\n\t\t\t'Canada',\n\t\t\tCountryISO.Canada,\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416',\n\t\t\t\t'418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587',\n\t\t\t\t'604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807',\n\t\t\t\t'819', '825', '867', '873', '902', '905'\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Cape Verde (Kabu Verdi)',\n\t\t\tCountryISO.CapeVerde,\n\t\t\t'238'\n\t\t],\n\t\t[\n\t\t\t'Caribbean Netherlands',\n\t\t\tCountryISO.CaribbeanNetherlands,\n\t\t\t'599',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Cayman Islands',\n\t\t\t'ky',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'345',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Central African Republic (RÃ©publique centrafricaine)',\n\t\t\tCountryISO.CentralAfricanRepublic,\n\t\t\t'236'\n\t\t],\n\t\t[\n\t\t\t'Chad (Tchad)',\n\t\t\tCountryISO.Chad,\n\t\t\t'235'\n\t\t],\n\t\t[\n\t\t\t'Chile',\n\t\t\tCountryISO.Chile,\n\t\t\t'56'\n\t\t],\n\t\t[\n\t\t\t'China (ä¸­å½)',\n\t\t\tCountryISO.China,\n\t\t\t'86'\n\t\t],\n\t\t[\n\t\t\t'Christmas Island',\n\t\t\tCountryISO.ChristmasIsland,\n\t\t\t'61',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Cocos (Keeling) Islands',\n\t\t\tCountryISO.Cocos,\n\t\t\t'61',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Colombia',\n\t\t\tCountryISO.Colombia,\n\t\t\t'57'\n\t\t],\n\t\t[\n\t\t\t'Comoros (â«Ø¬Ø²Ø± Ø§ÙÙÙØ±â¬â)',\n\t\t\tCountryISO.Comoros,\n\t\t\t'269'\n\t\t],\n\t\t[\n\t\t\t'Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)',\n\t\t\tCountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo,\n\t\t\t'243'\n\t\t],\n\t\t[\n\t\t\t'Congo (Republic) (Congo-Brazzaville)',\n\t\t\tCountryISO.CongoRepublicCongoBrazzaville,\n\t\t\t'242'\n\t\t],\n\t\t[\n\t\t\t'Cook Islands',\n\t\t\tCountryISO.CookIslands,\n\t\t\t'682'\n\t\t],\n\t\t[\n\t\t\t'Costa Rica',\n\t\t\tCountryISO.CostaRica,\n\t\t\t'506'\n\t\t],\n\t\t[\n\t\t\t'CÃ´te dâIvoire',\n\t\t\tCountryISO.CÃ´teDIvoire,\n\t\t\t'225'\n\t\t],\n\t\t[\n\t\t\t'Croatia (Hrvatska)',\n\t\t\tCountryISO.Croatia,\n\t\t\t'385'\n\t\t],\n\t\t[\n\t\t\t'Cuba',\n\t\t\tCountryISO.Cuba,\n\t\t\t'53'\n\t\t],\n\t\t[\n\t\t\t'CuraÃ§ao',\n\t\t\tCountryISO.CuraÃ§ao,\n\t\t\t'599',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Cyprus (ÎÏÏÏÎ¿Ï)',\n\t\t\tCountryISO.Cyprus,\n\t\t\t'357'\n\t\t],\n\t\t[\n\t\t\t'Czech Republic (ÄeskÃ¡ republika)',\n\t\t\tCountryISO.CzechRepublic,\n\t\t\t'420'\n\t\t],\n\t\t[\n\t\t\t'Denmark (Danmark)',\n\t\t\tCountryISO.Denmark,\n\t\t\t'45'\n\t\t],\n\t\t[\n\t\t\t'Djibouti',\n\t\t\tCountryISO.Djibouti,\n\t\t\t'253'\n\t\t],\n\t\t[\n\t\t\t'Dominica',\n\t\t\tCountryISO.Dominica,\n\t\t\t'1767'\n\t\t],\n\t\t[\n\t\t\t'Dominican Republic (RepÃºblica Dominicana)',\n\t\t\tCountryISO.DominicanRepublic,\n\t\t\t'1',\n\t\t\t2,\n\t\t\t['809', '829', '849']\n\t\t],\n\t\t[\n\t\t\t'Ecuador',\n\t\t\tCountryISO.Ecuador,\n\t\t\t'593'\n\t\t],\n\t\t[\n\t\t\t'Egypt (â«ÙØµØ±â¬â)',\n\t\t\tCountryISO.Egypt,\n\t\t\t'20'\n\t\t],\n\t\t[\n\t\t\t'El Salvador',\n\t\t\tCountryISO.ElSalvador,\n\t\t\t'503'\n\t\t],\n\t\t[\n\t\t\t'Equatorial Guinea (Guinea Ecuatorial)',\n\t\t\tCountryISO.EquatorialGuinea,\n\t\t\t'240'\n\t\t],\n\t\t[\n\t\t\t'Eritrea',\n\t\t\tCountryISO.Eritrea,\n\t\t\t'291'\n\t\t],\n\t\t[\n\t\t\t'Estonia (Eesti)',\n\t\t\tCountryISO.Estonia,\n\t\t\t'372'\n\t\t],\n\t\t[\n\t\t\t'Ethiopia',\n\t\t\tCountryISO.Ethiopia,\n\t\t\t'251'\n\t\t],\n\t\t[\n\t\t\t'Falkland Islands (Islas Malvinas)',\n\t\t\tCountryISO.FalklandIslands,\n\t\t\t'500'\n\t\t],\n\t\t[\n\t\t\t'Faroe Islands (FÃ¸royar)',\n\t\t\tCountryISO.FaroeIslands,\n\t\t\t'298'\n\t\t],\n\t\t[\n\t\t\t'Fiji',\n\t\t\tCountryISO.Fiji,\n\t\t\t'679'\n\t\t],\n\t\t[\n\t\t\t'Finland (Suomi)',\n\t\t\tCountryISO.Finland,\n\t\t\t'358',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'France',\n\t\t\tCountryISO.France,\n\t\t\t'33'\n\t\t],\n\t\t[\n\t\t\t'French Guiana (Guyane franÃ§aise)',\n\t\t\tCountryISO.FrenchGuiana,\n\t\t\t'594'\n\t\t],\n\t\t[\n\t\t\t'French Polynesia (PolynÃ©sie franÃ§aise)',\n\t\t\tCountryISO.FrenchPolynesia,\n\t\t\t'689'\n\t\t],\n\t\t[\n\t\t\t'Gabon',\n\t\t\tCountryISO.Gabon,\n\t\t\t'241'\n\t\t],\n\t\t[\n\t\t\t'Gambia',\n\t\t\tCountryISO.Gambia,\n\t\t\t'220'\n\t\t],\n\t\t[\n\t\t\t'Georgia (á¡áá¥áá ááááá)',\n\t\t\tCountryISO.Georgia,\n\t\t\t'995'\n\t\t],\n\t\t[\n\t\t\t'Germany (Deutschland)',\n\t\t\tCountryISO.Germany,\n\t\t\t'49'\n\t\t],\n\t\t[\n\t\t\t'Ghana (Gaana)',\n\t\t\tCountryISO.Ghana,\n\t\t\t'233'\n\t\t],\n\t\t[\n\t\t\t'Gibraltar',\n\t\t\tCountryISO.Gibraltar,\n\t\t\t'350'\n\t\t],\n\t\t[\n\t\t\t'Greece (ÎÎ»Î»Î¬Î´Î±)',\n\t\t\tCountryISO.Greece,\n\t\t\t'30'\n\t\t],\n\t\t[\n\t\t\t'Greenland (Kalaallit Nunaat)',\n\t\t\tCountryISO.Greenland,\n\t\t\t'299'\n\t\t],\n\t\t[\n\t\t\t'Grenada',\n\t\t\tCountryISO.Grenada,\n\t\t\t'1473'\n\t\t],\n\t\t[\n\t\t\t'Guadeloupe',\n\t\t\tCountryISO.Guadeloupe,\n\t\t\t'590',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Guam',\n\t\t\t'gu',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'671',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Guatemala',\n\t\t\tCountryISO.Guatemala,\n\t\t\t'502'\n\t\t],\n\t\t[\n\t\t\t'Guernsey',\n\t\t\tCountryISO.Guernsey,\n\t\t\t'44',\n\t\t\t1,\n\t\t\t[1481]\n\t\t],\n\t\t[\n\t\t\t'Guinea (GuinÃ©e)',\n\t\t\tCountryISO.Guinea,\n\t\t\t'224'\n\t\t],\n\t\t[\n\t\t\t'Guinea-Bissau (GuinÃ© Bissau)',\n\t\t\tCountryISO.GuineaBissau,\n\t\t\t'245'\n\t\t],\n\t\t[\n\t\t\t'Guyana',\n\t\t\tCountryISO.Guyana,\n\t\t\t'592'\n\t\t],\n\t\t[\n\t\t\t'Haiti',\n\t\t\tCountryISO.Haiti,\n\t\t\t'509'\n\t\t],\n\t\t[\n\t\t\t'Honduras',\n\t\t\tCountryISO.Honduras,\n\t\t\t'504'\n\t\t],\n\t\t[\n\t\t\t'Hong Kong (é¦æ¸¯)',\n\t\t\tCountryISO.HongKong,\n\t\t\t'852'\n\t\t],\n\t\t[\n\t\t\t'Hungary (MagyarorszÃ¡g)',\n\t\t\tCountryISO.Hungary,\n\t\t\t'36'\n\t\t],\n\t\t[\n\t\t\t'Iceland (Ãsland)',\n\t\t\tCountryISO.Iceland,\n\t\t\t'354'\n\t\t],\n\t\t[\n\t\t\t'India (à¤­à¤¾à¤°à¤¤)',\n\t\t\tCountryISO.India,\n\t\t\t'91'\n\t\t],\n\t\t[\n\t\t\t'Indonesia',\n\t\t\tCountryISO.Indonesia,\n\t\t\t'62'\n\t\t],\n\t\t[\n\t\t\t'Iran (â«Ø§ÛØ±Ø§Ùâ¬â)',\n\t\t\tCountryISO.Iran,\n\t\t\t'98'\n\t\t],\n\t\t[\n\t\t\t'Iraq (â«Ø§ÙØ¹Ø±Ø§Ùâ¬â)',\n\t\t\tCountryISO.Iraq,\n\t\t\t'964'\n\t\t],\n\t\t[\n\t\t\t'Ireland',\n\t\t\tCountryISO.Ireland,\n\t\t\t'353'\n\t\t],\n\t\t[\n\t\t\t'Isle of Man',\n\t\t\tCountryISO.IsleOfMan,\n\t\t\t'44',\n\t\t\t2,\n\t\t\t[1624]\n\t\t],\n\t\t[\n\t\t\t'Israel (â«××©×¨××â¬â)',\n\t\t\tCountryISO.Israel,\n\t\t\t'972'\n\t\t],\n\t\t[\n\t\t\t'Italy (Italia)',\n\t\t\tCountryISO.Italy,\n\t\t\t'39',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Jamaica',\n\t\t\t'jm',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'876',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Japan (æ¥æ¬)',\n\t\t\tCountryISO.Japan,\n\t\t\t'81'\n\t\t],\n\t\t[\n\t\t\t'Jersey',\n\t\t\tCountryISO.Jersey,\n\t\t\t'44',\n\t\t\t3,\n\t\t\t[1534]\n\t\t],\n\t\t[\n\t\t\t'Jordan (â«Ø§ÙØ£Ø±Ø¯Ùâ¬â)',\n\t\t\tCountryISO.Jordan,\n\t\t\t'962'\n\t\t],\n\t\t[\n\t\t\t'Kazakhstan (ÐÐ°Ð·Ð°ÑÑÑÐ°Ð½)',\n\t\t\tCountryISO.Kazakhstan,\n\t\t\t'7',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Kenya',\n\t\t\tCountryISO.Kenya,\n\t\t\t'254'\n\t\t],\n\t\t[\n\t\t\t'Kiribati',\n\t\t\tCountryISO.Kiribati,\n\t\t\t'686'\n\t\t],\n\t\t[\n\t\t\t'Kosovo',\n\t\t\tCountryISO.Kosovo,\n\t\t\t'383'\n\t\t],\n\t\t[\n\t\t\t'Kuwait (â«Ø§ÙÙÙÙØªâ¬â)',\n\t\t\tCountryISO.Kuwait,\n\t\t\t'965'\n\t\t],\n\t\t[\n\t\t\t'Kyrgyzstan (ÐÑÑÐ³ÑÐ·ÑÑÐ°Ð½)',\n\t\t\tCountryISO.Kyrgyzstan,\n\t\t\t'996'\n\t\t],\n\t\t[\n\t\t\t'Laos (àº¥àº²àº§)',\n\t\t\tCountryISO.Laos,\n\t\t\t'856'\n\t\t],\n\t\t[\n\t\t\t'Latvia (Latvija)',\n\t\t\tCountryISO.Latvia,\n\t\t\t'371'\n\t\t],\n\t\t[\n\t\t\t'Lebanon (â«ÙØ¨ÙØ§Ùâ¬â)',\n\t\t\tCountryISO.Lebanon,\n\t\t\t'961'\n\t\t],\n\t\t[\n\t\t\t'Lesotho',\n\t\t\tCountryISO.Lesotho,\n\t\t\t'266'\n\t\t],\n\t\t[\n\t\t\t'Liberia',\n\t\t\tCountryISO.Liberia,\n\t\t\t'231'\n\t\t],\n\t\t[\n\t\t\t'Libya (â«ÙÙØ¨ÙØ§â¬â)',\n\t\t\tCountryISO.Libya,\n\t\t\t'218'\n\t\t],\n\t\t[\n\t\t\t'Liechtenstein',\n\t\t\tCountryISO.Liechtenstein,\n\t\t\t'423'\n\t\t],\n\t\t[\n\t\t\t'Lithuania (Lietuva)',\n\t\t\tCountryISO.Lithuania,\n\t\t\t'370'\n\t\t],\n\t\t[\n\t\t\t'Luxembourg',\n\t\t\tCountryISO.Luxembourg,\n\t\t\t'352'\n\t\t],\n\t\t[\n\t\t\t'Macau (æ¾³é)',\n\t\t\tCountryISO.Macau,\n\t\t\t'853'\n\t\t],\n\t\t[\n\t\t\t'Macedonia (FYROM) (ÐÐ°ÐºÐµÐ´Ð¾Ð½Ð¸ÑÐ°)',\n\t\t\tCountryISO.Macedonia,\n\t\t\t'389'\n\t\t],\n\t\t[\n\t\t\t'Madagascar (Madagasikara)',\n\t\t\tCountryISO.Madagascar,\n\t\t\t'261'\n\t\t],\n\t\t[\n\t\t\t'Malawi',\n\t\t\tCountryISO.Malawi,\n\t\t\t'265'\n\t\t],\n\t\t[\n\t\t\t'Malaysia',\n\t\t\tCountryISO.Malaysia,\n\t\t\t'60'\n\t\t],\n\t\t[\n\t\t\t'Maldives',\n\t\t\tCountryISO.Maldives,\n\t\t\t'960'\n\t\t],\n\t\t[\n\t\t\t'Mali',\n\t\t\tCountryISO.Mali,\n\t\t\t'223'\n\t\t],\n\t\t[\n\t\t\t'Malta',\n\t\t\tCountryISO.Malta,\n\t\t\t'356'\n\t\t],\n\t\t[\n\t\t\t'Marshall Islands',\n\t\t\tCountryISO.MarshallIslands,\n\t\t\t'692'\n\t\t],\n\t\t[\n\t\t\t'Martinique',\n\t\t\tCountryISO.Martinique,\n\t\t\t'596'\n\t\t],\n\t\t[\n\t\t\t'Mauritania (â«ÙÙØ±ÙØªØ§ÙÙØ§â¬â)',\n\t\t\tCountryISO.Mauritania,\n\t\t\t'222'\n\t\t],\n\t\t[\n\t\t\t'Mauritius (Moris)',\n\t\t\tCountryISO.Mauritius,\n\t\t\t'230'\n\t\t],\n\t\t[\n\t\t\t'Mayotte',\n\t\t\tCountryISO.Mayotte,\n\t\t\t'262',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Mexico (MÃ©xico)',\n\t\t\tCountryISO.Mexico,\n\t\t\t'52'\n\t\t],\n\t\t[\n\t\t\t'Micronesia',\n\t\t\tCountryISO.Micronesia,\n\t\t\t'691'\n\t\t],\n\t\t[\n\t\t\t'Moldova (Republica Moldova)',\n\t\t\tCountryISO.Moldova,\n\t\t\t'373'\n\t\t],\n\t\t[\n\t\t\t'Monaco',\n\t\t\tCountryISO.Monaco,\n\t\t\t'377'\n\t\t],\n\t\t[\n\t\t\t'Mongolia (ÐÐ¾Ð½Ð³Ð¾Ð»)',\n\t\t\tCountryISO.Mongolia,\n\t\t\t'976'\n\t\t],\n\t\t[\n\t\t\t'Montenegro (Crna Gora)',\n\t\t\tCountryISO.Montenegro,\n\t\t\t'382'\n\t\t],\n\t\t[\n\t\t\t'Montserrat',\n\t\t\t'ms',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'664',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Morocco (â«Ø§ÙÙØºØ±Ø¨â¬â)',\n\t\t\tCountryISO.Morocco,\n\t\t\t'212',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Mozambique (MoÃ§ambique)',\n\t\t\tCountryISO.Mozambique,\n\t\t\t'258'\n\t\t],\n\t\t[\n\t\t\t'Myanmar (Burma) (áá¼ááºáá¬)',\n\t\t\tCountryISO.Myanmar,\n\t\t\t'95'\n\t\t],\n\t\t[\n\t\t\t'Namibia (NamibiÃ«)',\n\t\t\tCountryISO.Namibia,\n\t\t\t'264'\n\t\t],\n\t\t[\n\t\t\t'Nauru',\n\t\t\tCountryISO.Nauru,\n\t\t\t'674'\n\t\t],\n\t\t[\n\t\t\t'Nepal (à¤¨à¥à¤ªà¤¾à¤²)',\n\t\t\tCountryISO.Nepal,\n\t\t\t'977'\n\t\t],\n\t\t[\n\t\t\t'Netherlands (Nederland)',\n\t\t\tCountryISO.Netherlands,\n\t\t\t'31'\n\t\t],\n\t\t[\n\t\t\t'New Caledonia (Nouvelle-CalÃ©donie)',\n\t\t\tCountryISO.NewCaledonia,\n\t\t\t'687'\n\t\t],\n\t\t[\n\t\t\t'New Zealand',\n\t\t\tCountryISO.NewZealand,\n\t\t\t'64'\n\t\t],\n\t\t[\n\t\t\t'Nicaragua',\n\t\t\tCountryISO.Nicaragua,\n\t\t\t'505'\n\t\t],\n\t\t[\n\t\t\t'Niger (Nijar)',\n\t\t\tCountryISO.Niger,\n\t\t\t'227'\n\t\t],\n\t\t[\n\t\t\t'Nigeria',\n\t\t\tCountryISO.Nigeria,\n\t\t\t'234'\n\t\t],\n\t\t[\n\t\t\t'Niue',\n\t\t\tCountryISO.Niue,\n\t\t\t'683'\n\t\t],\n\t\t[\n\t\t\t'Norfolk Island',\n\t\t\tCountryISO.NorfolkIsland,\n\t\t\t'672'\n\t\t],\n\t\t[\n\t\t\t'North Korea (ì¡°ì  ë¯¼ì£¼ì£¼ì ì¸ë¯¼ ê³µíêµ­)',\n\t\t\tCountryISO.NorthKorea,\n\t\t\t'850'\n\t\t],\n\t\t[\n\t\t\t'Northern Mariana Islands',\n\t\t\tCountryISO.NorthernMarianaIslands,\n\t\t\t'1670'\n\t\t],\n\t\t[\n\t\t\t'Norway (Norge)',\n\t\t\tCountryISO.Norway,\n\t\t\t'47',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Oman (â«Ø¹ÙÙØ§Ùâ¬â)',\n\t\t\tCountryISO.Oman,\n\t\t\t'968'\n\t\t],\n\t\t[\n\t\t\t'Pakistan (â«Ù¾Ø§Ú©Ø³ØªØ§Ùâ¬â)',\n\t\t\tCountryISO.Pakistan,\n\t\t\t'92'\n\t\t],\n\t\t[\n\t\t\t'Palau',\n\t\t\tCountryISO.Palau,\n\t\t\t'680'\n\t\t],\n\t\t[\n\t\t\t'Palestine (â«ÙÙØ³Ø·ÙÙâ¬â)',\n\t\t\tCountryISO.Palestine,\n\t\t\t'970'\n\t\t],\n\t\t[\n\t\t\t'Panama (PanamÃ¡)',\n\t\t\tCountryISO.Panama,\n\t\t\t'507'\n\t\t],\n\t\t[\n\t\t\t'Papua New Guinea',\n\t\t\tCountryISO.PapuaNewGuinea,\n\t\t\t'675'\n\t\t],\n\t\t[\n\t\t\t'Paraguay',\n\t\t\tCountryISO.Paraguay,\n\t\t\t'595'\n\t\t],\n\t\t[\n\t\t\t'Peru (PerÃº)',\n\t\t\tCountryISO.Peru,\n\t\t\t'51'\n\t\t],\n\t\t[\n\t\t\t'Philippines',\n\t\t\tCountryISO.Philippines,\n\t\t\t'63'\n\t\t],\n\t\t[\n\t\t\t'Poland (Polska)',\n\t\t\tCountryISO.Poland,\n\t\t\t'48'\n\t\t],\n\t\t[\n\t\t\t'Portugal',\n\t\t\tCountryISO.Portugal,\n\t\t\t'351'\n\t\t],\n\t\t[\n\t\t\t'Puerto Rico',\n\t\t\tCountryISO.PuertoRico,\n\t\t\t'1',\n\t\t\t3,\n\t\t\t['787', '939']\n\t\t],\n\t\t[\n\t\t\t'Qatar (â«ÙØ·Ø±â¬â)',\n\t\t\tCountryISO.Qatar,\n\t\t\t'974'\n\t\t],\n\t\t[\n\t\t\t'RÃ©union (La RÃ©union)',\n\t\t\tCountryISO.RÃ©union,\n\t\t\t'262',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Romania (RomÃ¢nia)',\n\t\t\tCountryISO.Romania,\n\t\t\t'40'\n\t\t],\n\t\t[\n\t\t\t'Russia (Ð Ð¾ÑÑÐ¸Ñ)',\n\t\t\tCountryISO.Russia,\n\t\t\t'7',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Rwanda',\n\t\t\tCountryISO.Rwanda,\n\t\t\t'250'\n\t\t],\n\t\t[\n\t\t\t'Saint BarthÃ©lemy (Saint-BarthÃ©lemy)',\n\t\t\tCountryISO.SaintBarthÃ©lemy,\n\t\t\t'590',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Saint Helena',\n\t\t\tCountryISO.SaintHelena,\n\t\t\t'290'\n\t\t],\n\t\t[\n\t\t\t'Saint Kitts and Nevis',\n\t\t\tCountryISO.SaintKittsAndNevis,\n\t\t\t'1869'\n\t\t],\n\t\t[\n\t\t\t'Saint Lucia',\n\t\t\t'lc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'758',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Saint Martin (Saint-Martin (partie franÃ§aise))',\n\t\t\tCountryISO.SaintMartin,\n\t\t\t'590',\n\t\t\t2\n\t\t],\n\t\t[\n\t\t\t'Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)',\n\t\t\tCountryISO.SaintPierreAndMiquelon,\n\t\t\t'508'\n\t\t],\n\t\t[\n\t\t\t'Saint Vincent and the Grenadines',\n\t\t\t'vc',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'784',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Samoa',\n\t\t\tCountryISO.Samoa,\n\t\t\t'685'\n\t\t],\n\t\t[\n\t\t\t'San Marino',\n\t\t\tCountryISO.SanMarino,\n\t\t\t'378'\n\t\t],\n\t\t[\n\t\t\t'SÃ£o TomÃ© and PrÃ­ncipe (SÃ£o TomÃ© e PrÃ­ncipe)',\n\t\t\tCountryISO.SÃ£oTomÃ©AndPrÃ­ncipe,\n\t\t\t'239'\n\t\t],\n\t\t[\n\t\t\t'Saudi Arabia (â«Ø§ÙÙÙÙÙØ© Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙØ³Ø¹ÙØ¯ÙØ©â¬â)',\n\t\t\tCountryISO.SaudiArabia,\n\t\t\t'966'\n\t\t],\n\t\t[\n\t\t\t'Senegal (SÃ©nÃ©gal)',\n\t\t\tCountryISO.Senegal,\n\t\t\t'221'\n\t\t],\n\t\t[\n\t\t\t'Serbia (Ð¡ÑÐ±Ð¸ÑÐ°)',\n\t\t\tCountryISO.Serbia,\n\t\t\t'381'\n\t\t],\n\t\t[\n\t\t\t'Seychelles',\n\t\t\tCountryISO.Seychelles,\n\t\t\t'248'\n\t\t],\n\t\t[\n\t\t\t'Sierra Leone',\n\t\t\tCountryISO.SierraLeone,\n\t\t\t'232'\n\t\t],\n\t\t[\n\t\t\t'Singapore',\n\t\t\tCountryISO.Singapore,\n\t\t\t'65'\n\t\t],\n\t\t[\n\t\t\t'Sint Maarten',\n\t\t\t'sx',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'721',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Slovakia (Slovensko)',\n\t\t\tCountryISO.Slovakia,\n\t\t\t'421'\n\t\t],\n\t\t[\n\t\t\t'Slovenia (Slovenija)',\n\t\t\tCountryISO.Slovenia,\n\t\t\t'386'\n\t\t],\n\t\t[\n\t\t\t'Solomon Islands',\n\t\t\tCountryISO.SolomonIslands,\n\t\t\t'677'\n\t\t],\n\t\t[\n\t\t\t'Somalia (Soomaaliya)',\n\t\t\tCountryISO.Somalia,\n\t\t\t'252'\n\t\t],\n\t\t[\n\t\t\t'South Africa',\n\t\t\tCountryISO.SouthAfrica,\n\t\t\t'27'\n\t\t],\n\t\t[\n\t\t\t'South Korea (ëíë¯¼êµ­)',\n\t\t\tCountryISO.SouthKorea,\n\t\t\t'82'\n\t\t],\n\t\t[\n\t\t\t'South Sudan (â«Ø¬ÙÙØ¨ Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)',\n\t\t\tCountryISO.SouthSudan,\n\t\t\t'211'\n\t\t],\n\t\t[\n\t\t\t'Spain (EspaÃ±a)',\n\t\t\tCountryISO.Spain,\n\t\t\t'34'\n\t\t],\n\t\t[\n\t\t\t'Sri Lanka (à·à·âà¶»à· à¶½à¶à¶à·à·)',\n\t\t\tCountryISO.SriLanka,\n\t\t\t'94'\n\t\t],\n\t\t[\n\t\t\t'Sudan (â«Ø§ÙØ³ÙØ¯Ø§Ùâ¬â)',\n\t\t\tCountryISO.Sudan,\n\t\t\t'249'\n\t\t],\n\t\t[\n\t\t\t'Suriname',\n\t\t\tCountryISO.Suriname,\n\t\t\t'597'\n\t\t],\n\t\t[\n\t\t\t'Svalbard and Jan Mayen',\n\t\t\tCountryISO.SvalbardAndJanMayen,\n\t\t\t'47',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Swaziland',\n\t\t\tCountryISO.Swaziland,\n\t\t\t'268'\n\t\t],\n\t\t[\n\t\t\t'Sweden (Sverige)',\n\t\t\tCountryISO.Sweden,\n\t\t\t'46'\n\t\t],\n\t\t[\n\t\t\t'Switzerland (Schweiz)',\n\t\t\tCountryISO.Switzerland,\n\t\t\t'41'\n\t\t],\n\t\t[\n\t\t\t'Syria (â«Ø³ÙØ±ÙØ§â¬â)',\n\t\t\tCountryISO.Syria,\n\t\t\t'963'\n\t\t],\n\t\t[\n\t\t\t'Taiwan (å°ç£)',\n\t\t\tCountryISO.Taiwan,\n\t\t\t'886'\n\t\t],\n\t\t[\n\t\t\t'Tajikistan',\n\t\t\tCountryISO.Tajikistan,\n\t\t\t'992'\n\t\t],\n\t\t[\n\t\t\t'Tanzania',\n\t\t\tCountryISO.Tanzania,\n\t\t\t'255'\n\t\t],\n\t\t[\n\t\t\t'Thailand (à¹à¸à¸¢)',\n\t\t\tCountryISO.Thailand,\n\t\t\t'66'\n\t\t],\n\t\t[\n\t\t\t'Timor-Leste',\n\t\t\tCountryISO.TimorLeste,\n\t\t\t'670'\n\t\t],\n\t\t[\n\t\t\t'Togo',\n\t\t\tCountryISO.Togo,\n\t\t\t'228'\n\t\t],\n\t\t[\n\t\t\t'Tokelau',\n\t\t\tCountryISO.Tokelau,\n\t\t\t'690'\n\t\t],\n\t\t[\n\t\t\t'Tonga',\n\t\t\tCountryISO.Tonga,\n\t\t\t'676'\n\t\t],\n\t\t[\n\t\t\t'Trinidad and Tobago',\n\t\t\t'tt',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'868',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Tunisia (â«ØªÙÙØ³â¬â)',\n\t\t\tCountryISO.Tunisia,\n\t\t\t'216'\n\t\t],\n\t\t[\n\t\t\t'Turkey (TÃ¼rkiye)',\n\t\t\tCountryISO.Turkey,\n\t\t\t'90'\n\t\t],\n\t\t[\n\t\t\t'Turkmenistan',\n\t\t\tCountryISO.Turkmenistan,\n\t\t\t'993'\n\t\t],\n\t\t[\n\t\t\t'Turks and Caicos Islands',\n\t\t\tCountryISO.TurksAndCaicosIslands,\n\t\t\t'1649'\n\t\t],\n\t\t[\n\t\t\t'Tuvalu',\n\t\t\tCountryISO.Tuvalu,\n\t\t\t'688'\n\t\t],\n\t\t[\n\t\t\t'U.S. Virgin Islands',\n\t\t\t'vi',\n\t\t\t'1',\n\t\t\t1,\n\t\t\t[\n\t\t\t\t'340',\n\t\t\t]\n\t\t],\n\t\t[\n\t\t\t'Uganda',\n\t\t\tCountryISO.Uganda,\n\t\t\t'256'\n\t\t],\n\t\t[\n\t\t\t'Ukraine (Ð£ÐºÑÐ°ÑÐ½Ð°)',\n\t\t\tCountryISO.Ukraine,\n\t\t\t'380'\n\t\t],\n\t\t[\n\t\t\t'United Arab Emirates (â«Ø§ÙØ¥ÙØ§Ø±Ø§Øª Ø§ÙØ¹Ø±Ø¨ÙØ© Ø§ÙÙØªØ­Ø¯Ø©â¬â)',\n\t\t\tCountryISO.UnitedArabEmirates,\n\t\t\t'971'\n\t\t],\n\t\t[\n\t\t\t'United Kingdom',\n\t\t\tCountryISO.UnitedKingdom,\n\t\t\t'44',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'United States',\n\t\t\tCountryISO.UnitedStates,\n\t\t\t'1',\n\t\t\t0\n\t\t],\n\t\t[\n\t\t\t'Uruguay',\n\t\t\tCountryISO.Uruguay,\n\t\t\t'598'\n\t\t],\n\t\t[\n\t\t\t'Uzbekistan (OÊ»zbekiston)',\n\t\t\tCountryISO.Uzbekistan,\n\t\t\t'998'\n\t\t],\n\t\t[\n\t\t\t'Vanuatu',\n\t\t\tCountryISO.Vanuatu,\n\t\t\t'678'\n\t\t],\n\t\t[\n\t\t\t'Vatican City (CittÃ  del Vaticano)',\n\t\t\tCountryISO.VaticanCity,\n\t\t\t'39',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Venezuela',\n\t\t\tCountryISO.Venezuela,\n\t\t\t'58'\n\t\t],\n\t\t[\n\t\t\t'Vietnam (Viá»t Nam)',\n\t\t\tCountryISO.Vietnam,\n\t\t\t'84'\n\t\t],\n\t\t[\n\t\t\t'Wallis and Futuna',\n\t\t\tCountryISO.WallisAndFutuna,\n\t\t\t'681'\n\t\t],\n\t\t[\n\t\t\t'Western Sahara (â«Ø§ÙØµØ­Ø±Ø§Ø¡ Ø§ÙØºØ±Ø¨ÙØ©â¬â)',\n\t\t\tCountryISO.WesternSahara,\n\t\t\t'212',\n\t\t\t1\n\t\t],\n\t\t[\n\t\t\t'Yemen (â«Ø§ÙÙÙÙâ¬â)',\n\t\t\tCountryISO.Yemen,\n\t\t\t'967'\n\t\t],\n\t\t[\n\t\t\t'Zambia',\n\t\t\tCountryISO.Zambia,\n\t\t\t'260'\n\t\t],\n\t\t[\n\t\t\t'Zimbabwe',\n\t\t\tCountryISO.Zimbabwe,\n\t\t\t'263'\n\t\t],\n\t\t[\n\t\t\t'Ãland Islands',\n\t\t\tCountryISO.ÃlandIslands,\n\t\t\t'358',\n\t\t\t1\n\t\t]\n\t];\n}","import { FormControl } from '@angular/forms';\nimport * as lpn from 'google-libphonenumber';\n\nexport const phoneNumberValidator = (control: FormControl) => {\n\tconst isCheckValidation = document.getElementById('phone').getAttribute('validation');\n\tif (isCheckValidation == 'true') {\n\t\tconst isRequired = control.errors && control.errors.required === true;\n\t\tconst error = { validatePhoneNumber: { valid: false } };\n\t\tlet number: lpn.PhoneNumber;\n\n\t\ttry {\n\t\t\tnumber = lpn.PhoneNumberUtil.getInstance().parse(control.value.number, control.value.countryCode);\n\t\t} catch (e) {\n\t\t\tif (isRequired === true) { return error; }\n\t\t}\n\n\t\tif (control.value) {\n\t\t\tif (!number) {\n\t\t\t\treturn error;\n\t\t\t} else {\n\t\t\t\tif (!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(number, control.value.countryCode)) {\n\t\t\t\t\treturn error;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t} else if(isCheckValidation == 'false') {\n\t\tcontrol.clearValidators();\n\t}\n\treturn;\n\n};\n","export enum SearchCountryField {\n\tDialCode = 'dialCode',\n\tIso2 = 'iso2',\n\tName = 'name',\n\tAll = 'all'\n}\n","import { Component, OnInit, forwardRef, Input, ViewChild, ElementRef, SimpleChanges, OnChanges, Output, EventEmitter } from '@angular/core';\nimport { NG_VALIDATORS, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { CountryCode } from './data/country-code';\nimport { phoneNumberValidator } from './ngx-intl-tel-input.validator';\nimport { Country } from './model/country.model';\nimport * as lpn from 'google-libphonenumber';\nimport { SearchCountryField } from './enums/search-country-field.enum';\nimport { TooltipLabel } from './enums/tooltip-label.enum';\nimport { CountryISO } from './enums/country-iso.enum';\n\n@Component({\n\tselector: 'ngx-intl-tel-input',\n\ttemplateUrl: './ngx-intl-tel-input.component.html',\n\tstyleUrls: ['./ngx-intl-tel-input.component.css'],\n\tproviders: [\n\t\tCountryCode,\n\t\t{\n\t\t\tprovide: NG_VALUE_ACCESSOR,\n\t\t\t// tslint:disable-next-line:no-forward-ref\n\t\t\tuseExisting: forwardRef(() => NgxIntlTelInputComponent),\n\t\t\tmulti: true\n\t\t},\n\t\t{\n\t\t\tprovide: NG_VALIDATORS,\n\t\t\tuseValue: phoneNumberValidator,\n\t\t\tmulti: true,\n\t\t}\n\t]\n})\nexport class NgxIntlTelInputComponent implements OnInit, OnChanges {\n\n\t@Input() value = '';\n\t@Input() preferredCountries: Array<string> = [];\n\t@Input() enablePlaceholder = true;\n\t@Input() cssClass = 'form-control';\n\t@Input() onlyCountries: Array<string> = [];\n\t@Input() enableAutoCountrySelect = true;\n\t@Input() searchCountryFlag = false;\n\t@Input() searchCountryField: SearchCountryField[] = [SearchCountryField.All];\n\t@Input() searchCountryPlaceholder = 'Search Country';\n\t@Input() maxLength = '';\n\t@Input() tooltipField: TooltipLabel;\n\t@Input() selectFirstCountry = true;\n\t@Input() selectedCountryISO: CountryISO;\n\t@Input() phoneValidation = true;\n\n\t@Output() readonly countryChange = new EventEmitter<Country>();\n\n\tselectedCountry: Country = {\n\t\tareaCodes: undefined,\n\t\tdialCode: '',\n\t\tflagClass: '',\n\t\tiso2: '',\n\t\tname: '',\n\t\tplaceHolder: '',\n\t\tpriority: 0\n\t};\n\n\t// display the country dial code next to the selected flag\n\t@Input() separateDialCode = false;\n\tseparateDialCodeClass: string;\n\n\tphoneNumber = '';\n\tallCountries: Array<Country> = [];\n\tpreferredCountriesInDropDown: Array<Country> = [];\n\t// Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n\tphoneUtil: any = lpn.PhoneNumberUtil.getInstance();\n\tdisabled = false;\n\terrors: Array<any> = ['Phone number is required.'];\n\tcountrySearchText = '';\n\n\t@ViewChild('countryList', { static: false }) countryList: ElementRef;\n\n\tonTouched = () => { };\n\tpropagateChange = (_: any) => { };\n\n\tconstructor(\n\t\tprivate countryCodeData: CountryCode\n\t) { }\n\n\tngOnInit() {\n\t\tthis.fetchCountryData();\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.getPreferredCountries();\n\t\t}\n\t\tif (this.onlyCountries.length) {\n\t\t\tthis.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\n\t\t}\n\t\tif (this.selectFirstCountry) {\n\t\t\tif (this.preferredCountriesInDropDown.length) {\n\t\t\t\tthis.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n\t\t\t} else {\n\t\t\t\tthis.setSelectedCountry(this.allCountries[0]);\n\t\t\t}\n\t\t}\n\t\tthis.getSelectedCountry();\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tngOnChanges(changes: SimpleChanges) {\n\t\tif (this.allCountries && changes['selectedCountryISO']\n\t\t\t&& changes['selectedCountryISO'].currentValue !== changes['selectedCountryISO'].previousValue) {\n\t\t\tthis.getSelectedCountry();\n\t\t}\n\t\tif (changes.preferredCountries) {\n\t\t\tthis.getPreferredCountries();\n\t\t}\t\t\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tgetPreferredCountries() {\n\t\tif (this.preferredCountries.length) {\n\t\t\tthis.preferredCountriesInDropDown = [];\n\t\t\tthis.preferredCountries.forEach(iso2 => {\n\t\t\t\tconst preferredCountry = this.allCountries.filter((c) => {\n\t\t\t\t\treturn c.iso2 === iso2;\n\t\t\t\t});\n\n\t\t\t\tthis.preferredCountriesInDropDown.push(preferredCountry[0]);\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSelectedCountry() {\n\t\tif (this.selectedCountryISO) {\n\t\t\tthis.selectedCountry = this.allCountries.find(c => { return (c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase()); });\n\t\t\tif (this.selectedCountry) {\n\t\t\t\tif (this.phoneNumber) {\n\t\t\t\t\tthis.onPhoneNumberChange();\n\t\t\t\t} else {\n\t\t\t\t\tthis.propagateChange(undefined);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tsetSelectedCountry(country: Country) {\n\t\tthis.selectedCountry = country;\n\t\tthis.countryChange.emit(country);\n\t}\n\n\n\t/**\n\t * Search country based on country name, iso2, dialCode or all of them.\n\t */\n\tsearchCountry() {\n\t\tif (!this.countrySearchText) {\n\t\t\tthis.countryList.nativeElement.querySelector('li').scrollIntoView({ behavior: 'smooth' });\n\t\t\treturn;\n\t\t}\n\t\tconst countrySearchTextLower = this.countrySearchText.toLowerCase();\n\t\tconst country = this.allCountries.filter(c => {\n\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n\t\t\t\t// Search in all fields\n\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Or search by specific SearchCountryField(s)\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n\t\t\t\t\tif (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n\t\t\t\t\tif (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n\t\t\t\t\tif (c.dialCode.startsWith(this.countrySearchText)) {\n\t\t\t\t\t\treturn c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif (country.length > 0) {\n\t\t\tconst el = this.countryList.nativeElement.querySelector('#' + country[0].iso2);\n\t\t\tif (el) {\n\t\t\t\tel.scrollIntoView({ behavior: 'smooth' });\n\t\t\t}\n\t\t}\n\n\t\tthis.checkSeparateDialCodeStyle();\n\t}\n\n\tpublic onPhoneNumberChange(): void {\n\t\tthis.value = this.phoneNumber;\n\n\t\tlet number: lpn.PhoneNumber;\n\t\ttry {\n\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, this.selectedCountry.iso2.toUpperCase());\n\t\t} catch (e) {\n\t\t}\n\n\t\tlet countryCode = this.selectedCountry.iso2;\n\t\t// auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n\t\tif (this.enableAutoCountrySelect) {\n\t\t\tcountryCode = number && number.getCountryCode()\n\t\t\t\t? this.getCountryIsoCode(number.getCountryCode(), number)\n\t\t\t\t: this.selectedCountry.iso2;\n\t\t\tif (countryCode && countryCode !== this.selectedCountry.iso2) {\n\t\t\t\tconst newCountry = this.allCountries.find(c => c.iso2 === countryCode);\n\t\t\t\tif (newCountry) {\n\t\t\t\t\tthis.selectedCountry = newCountry;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tcountryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (!this.value) {\n\t\t\t// tslint:disable-next-line:no-null-keyword\n\t\t\tthis.propagateChange(null);\n\t\t} else {\n\t\t\tvar intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.phoneNumber = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\n\t\t\t\tcountryCode: countryCode.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic onCountrySelect(country: Country, el): void {\n\t\tthis.setSelectedCountry(country);\n\n\t\tthis.checkSeparateDialCodeStyle();\n\n\t\tif (this.phoneNumber != null && this.phoneNumber.length > 0) {\n\t\t\tthis.value = this.phoneNumber;\n\n\t\t\tlet number: lpn.PhoneNumber;\n\t\t\ttry {\n\t\t\t\tnumber = this.phoneUtil.parse(this.phoneNumber, this.selectedCountry.iso2.toUpperCase());\n\t\t\t} catch (e) {\n\t\t\t}\n\n\t\t\tvar intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\n\n\t\t\t// parse phoneNumber if separate dial code is needed\n\t\t\tif (this.separateDialCode && intlNo) {\n\t\t\t\tthis.phoneNumber = this.removeDialCode(intlNo);\n\t\t\t}\n\n\t\t\tthis.propagateChange({\n\t\t\t\tnumber: this.value,\n\t\t\t\tinternationalNumber: intlNo,\n\t\t\t\tnationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\n\t\t\t\tcountryCode: this.selectedCountry.iso2.toUpperCase(),\n\t\t\t\tdialCode: '+' + this.selectedCountry.dialCode\n\t\t\t});\n\t\t} else {\n\t\t\tthis.propagateChange(null);\n\t\t}\n\n\t\tel.focus();\n\t}\n\n\tpublic onInputKeyPress(event: KeyboardEvent): void {\n\t\tconst allowedChars = /[0-9\\+\\-\\ ]/;\n\t\tconst allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n\t\tconst allowedOtherKeys = [\n\t\t\t'ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown',\n\t\t\t'Home', 'End', 'Insert', 'Delete', 'Backspace'\n\t\t];\n\n\t\tif (!allowedChars.test(event.key)\n\t\t\t&& !(event.ctrlKey && allowedCtrlChars.test(event.key))\n\t\t\t&& !(allowedOtherKeys.includes(event.key))) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n\tprotected fetchCountryData(): void {\n\t\tthis.countryCodeData.allCountries.forEach(c => {\n\t\t\tconst country: Country = {\n\t\t\t\tname: c[0].toString(),\n\t\t\t\tiso2: c[1].toString(),\n\t\t\t\tdialCode: c[2].toString(),\n\t\t\t\tpriority: +c[3] || 0,\n\t\t\t\tareaCodes: c[4] as string[] || undefined,\n\t\t\t\tflagClass: c[1].toString().toLocaleLowerCase(),\n\t\t\t\tplaceHolder: ''\n\t\t\t};\n\n\t\t\tif (this.enablePlaceholder) {\n\t\t\t\tcountry.placeHolder = this.getPhoneNumberPlaceHolder(country.iso2.toUpperCase());\n\t\t\t}\n\n\t\t\tthis.allCountries.push(country);\n\t\t});\n\t}\n\n\tprotected getPhoneNumberPlaceHolder(countryCode: string): string {\n\t\ttry {\n\t\t\treturn this.phoneUtil.format(this.phoneUtil.getExampleNumber(countryCode), lpn.PhoneNumberFormat.INTERNATIONAL);\n\t\t} catch (e) {\n\t\t\treturn e;\n\t\t}\n\t}\n\n\tregisterOnChange(fn: any): void {\n\t\tthis.propagateChange = fn;\n\t}\n\n\tregisterOnTouched(fn: any) {\n\t\tthis.onTouched = fn;\n\t}\n\n\tsetDisabledState(isDisabled: boolean): void {\n\t\tthis.disabled = isDisabled;\n\t}\n\n\twriteValue(obj: any): void {\n\t\tif (obj == null) {\n\t\t\tthis.ngOnInit();\n\t\t}\n\t\tthis.phoneNumber = obj;\n\t\tsetTimeout(() => {\n\t\t\tthis.onPhoneNumberChange();\n\t\t}, 1);\n\t}\n\n\tprivate getCountryIsoCode(countryCode: number, number: lpn.PhoneNumber): string | undefined {\n\t\t// Will use this to match area code from the first numbers\n\t\tconst rawNumber = number['values_']['2'].toString();\n\t\t// List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n\t\tconst countries = this.allCountries.filter(c => c.dialCode === countryCode.toString());\n\t\t// Main country is the country, which has no areaCodes specified in country-code.ts file.\n\t\tconst mainCountry = countries.find(c => c.areaCodes === undefined);\n\t\t// Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n\t\tconst secondaryCountries = countries.filter(c => c.areaCodes !== undefined);\n\t\tlet matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n\n\t\t/*\n\t\t\tInterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\n\t\t\tIf no matches found, fallback to the main country.\n\t\t*/\n\t\tsecondaryCountries.forEach(country => {\n\t\t\tcountry.areaCodes.forEach(areaCode => {\n\t\t\t\tif (rawNumber.startsWith(areaCode)) {\n\t\t\t\t\tmatchedCountry = country.iso2;\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\n\t\treturn matchedCountry;\n\t}\n\n\tseparateDialCodePlaceHolder(placeholder: string): string {\n\t\treturn this.removeDialCode(placeholder);\n\t}\n\n\tprivate removeDialCode(phoneNumber: string): string {\n\t\tif (this.separateDialCode && phoneNumber) {\n\t\t\tphoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n\t\t}\n\t\treturn phoneNumber;\n\t}\n\n\t// adjust input alignment\n\tprivate checkSeparateDialCodeStyle() {\n\t\tif (this.separateDialCode && this.selectedCountry) {\n\t\t\tvar cntryCd = this.selectedCountry.dialCode;\n\t\t\tthis.separateDialCodeClass = 'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n\t\t} else {\n\t\t\tthis.separateDialCodeClass = '';\n\t\t}\n\t}\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NgxIntlTelInputComponent } from './ngx-intl-tel-input.component';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxIntlTelInputService } from './ngx-intl-tel-input.service';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\n\n@NgModule({\n\tdeclarations: [NgxIntlTelInputComponent],\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tReactiveFormsModule,\n\t\tBsDropdownModule.forRoot(),\n\t\tTooltipModule.forRoot()\n\t],\n\texports: [NgxIntlTelInputComponent]\n})\nexport class NgxIntlTelInputModule {\n\tstatic forRoot(): ModuleWithProviders {\n\t\treturn {\n\t\t\tngModule: NgxIntlTelInputModule,\n\t\t\tproviders: [NgxIntlTelInputService]\n\t\t};\n\t}\n}\n","export enum TooltipLabel {\n\tName = 'name',\n\tIso2 = 'iso2'\n}\n"]}